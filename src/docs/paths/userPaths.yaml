/api/user/profile:
  get:
    tags:
      - User
      - Therapist
      - Admin
    summary: Get authenticated user's profile
    description: Retrieves the profile of the authenticated user. The user can be of role `admin`, `therapist`, or `user`.
    operationId: getProfile
    security:
      - bearerAuth: []
    responses:
      '200':
        description: Successfully retrieved the user's profile
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    id:
                      type: string
                      example: "64b61e1e59bdfc6f12a34b9e"
                    email:
                      type: string
                      example: "example@gmail.com"
                    role:
                      type: string
                      enum:
                        - admin
                        - therapist
                        - user
                      example: "therapist"
                    isVerified:
                      type: boolean
                      example: true
                    image:
                      type: string
                      example: "profile.jpg"
                    profile:
                      type: object
                      additionalProperties: true
                      description: "The profile object specific to the user's role"
      '400':
        description: Invalid role or missing data
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Invalid role: unknownRole"
      '401':
        $ref: '#/components/responses/Unautherized'
      '404':
        description: User or profile not found
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "User not found"
      '500':
        $ref: '#/components/responses/InternalServerError'


/api/user/client/profile:
  put:
    tags:
      - User
    summary: Update client profile
    description: Updates the name, gender, and profile image of the client.
    operationId: updateClientProfile
    security:
      - BearerAuth: []
    requestBody:
      required: true
      content:
        multipart/form-data:
          schema:
            type: object
            properties:
              name:
                type: string
                description: Updated name of the user
              gender:
                type: string
                description: Updated gender of the user
                enum: [male, female, other]
              image:
                type: string
                format: binary
                description: Updated profile image file
    responses:
      '200':
        description: User profile updated successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "User updated successfully"
                user:
                  type: object
                  properties:
                    id:
                      type: string
                      description: User's unique identifier
                      example: "64a2b58ef0345a1234567890"
                    email:
                      type: string
                      description: User's email address
                      example: "user@example.com"
                    role:
                      type: string
                      description: User's role
                      example: "user"
                    profile:
                      type: object
                      properties:
                        name:
                          type: string
                          description: Full name of the user
                          example: "John Doe"
                        gender:
                          type: string
                          description: Gender of the user
                          example: "male"
                    isVerified:
                      type: boolean
                      description: Indicates if the user is verified
                      example: true
                    image:
                      type: string
                      description: URL of the user's profile image
                      example: "https://example.com/images/profile.jpg"
      '400':
        description: Bad request due to validation errors
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Invalid gender type [male, female, other] are allowed."
      '404':
        description: User or user profile not found
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "User not found"
      '500':
        $ref: '#/components/responses/InternalServerError'

